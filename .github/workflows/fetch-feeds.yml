name: Fetch News Feeds

on:
  schedule:
    # Run daily at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual triggering

permissions:
  contents: write
  pages: read

jobs:
  fetch-feeds:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm init -y
        npm install rss-parser cheerio node-fetch

    - name: Create fetch script
      run: |
        cat > fetch-feeds.js << 'EOF'
        const Parser = require('rss-parser');
        const fs = require('fs').promises;
        const path = require('path');

        const parser = new Parser({
          customFields: {
            feed: ['language', 'copyright'],
            item: ['media:content', 'content:encoded', 'pubDate']
          }
        });

        // RSS Feed sources
        const sources = [
          {
            name: 'CoinDesk',
            url: 'https://www.coindesk.com/feed/',
            category: 'Cryptocurrency'
          },
          {
            name: 'CoinTelegraph',
            url: 'https://cointelegraph.com/rss',
            category: 'Cryptocurrency'
          },
          {
            name: 'CNBC Finance',
            url: 'https://www.cnbc.com/id/100003114/device/rss/rss.html',
            category: 'Finance'
          },
          {
            name: 'Reuters Business',
            url: 'https://www.reuters.com/business/finance/rss',
            category: 'Business'
          }
        ];

        // Keywords to filter for FinTech content
        const fintechKeywords = [
          'fintech', 'cryptocurrency', 'blockchain', 'digital payments',
          'central bank digital currency', 'cbdc', 'defi', 'regtech',
          'insurtech', 'wealthtech', 'neobank', 'digital banking',
          'mobile payments', 'crypto', 'bitcoin', 'ethereum',
          'payment processing', 'financial technology'
        ];

        const excludeKeywords = [
          'gambling', 'ponzi', 'scam', 'fraud'
        ];

        function isRelevantArticle(title, description) {
          const text = (title + ' ' + (description || '')).toLowerCase();
          
          // Check if article contains fintech keywords
          const hasRelevantKeyword = fintechKeywords.some(keyword => 
            text.includes(keyword.toLowerCase())
          );
          
          // Check if article contains excluded keywords
          const hasExcludedKeyword = excludeKeywords.some(keyword => 
            text.includes(keyword.toLowerCase())
          );
          
          return hasRelevantKeyword && !hasExcludedKeyword;
        }

        async function fetchFeed(source) {
          try {
            console.log(`Fetching ${source.name}...`);
            const feed = await parser.parseURL(source.url);
            
            const articles = feed.items
              .filter(item => isRelevantArticle(item.title, item.contentSnippet))
              .slice(0, 10) // Limit to 10 articles per source
              .map(item => ({
                title: item.title,
                link: item.link,
                pubDate: item.pubDate || item.isoDate,
                description: item.contentSnippet || item.summary || '',
                source: source.name,
                category: source.category
              }));
            
            console.log(`Fetched ${articles.length} relevant articles from ${source.name}`);
            return articles;
          } catch (error) {
            console.error(`Error fetching ${source.name}:`, error.message);
            return [];
          }
        }

        async function main() {
          try {
            console.log('Starting news feed fetch...');
            
            // Fetch from all sources
            const allArticles = [];
            for (const source of sources) {
              const articles = await fetchFeed(source);
              allArticles.push(...articles);
            }

            // Remove duplicates and sort by date
            const uniqueArticles = allArticles.filter((article, index, arr) => 
              arr.findIndex(a => a.title === article.title) === index
            );

            const sortedArticles = uniqueArticles.sort((a, b) => 
              new Date(b.pubDate) - new Date(a.pubDate)
            );

            // Limit to 50 total articles
            const finalArticles = sortedArticles.slice(0, 50);

            const newsData = {
              articles: finalArticles,
              lastUpdated: new Date().toISOString(),
              totalArticles: finalArticles.length,
              sources: sources.map(s => s.name)
            };

            // Ensure directory exists
            await fs.mkdir('assets/news', { recursive: true });

            // Write to news.json
            await fs.writeFile(
              'assets/news/news.json',
              JSON.stringify(newsData, null, 2)
            );

            console.log(`Successfully wrote ${finalArticles.length} articles to news.json`);
            
            // Update sources.json with fetch statistics
            const sourcesData = {
              sources: sources.map(source => ({
                ...source,
                enabled: true,
                description: `${source.category} news source`,
                lastFetch: new Date().toISOString()
              })),
              updateSchedule: {
                frequency: "daily",
                time: "06:00 UTC",
                timezone: "UTC"
              },
              filters: {
                keywords: fintechKeywords,
                excludeKeywords: excludeKeywords
              },
              settings: {
                maxArticlesPerSource: 10,
                articleRetentionDays: 7,
                duplicateDetection: true,
                contentFiltering: true
              },
              lastUpdate: new Date().toISOString(),
              articlesCount: finalArticles.length
            };

            await fs.writeFile(
              'assets/news/sources.json',
              JSON.stringify(sourcesData, null, 2)
            );

            console.log('News feed fetch completed successfully!');
          } catch (error) {
            console.error('Error in main function:', error);
            process.exit(1);
          }
        }

        main();
        EOF

    - name: Run feed fetch script
      run: node fetch-feeds.js

    - name: Check for changes
      id: git-check
      run: |
        git diff --exit-code assets/news/ && echo "changed=false" >> $GITHUB_OUTPUT || echo "changed=true" >> $GITHUB_OUTPUT

    - name: Commit and push changes
      if: steps.git-check.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add assets/news/
        git commit -m "Update news feeds - $(date -u '+%Y-%m-%d %H:%M:%S UTC')" || exit 0
        git push

    - name: Summary
      run: |
        if [ "${{ steps.git-check.outputs.changed }}" == "true" ]; then
          echo "✅ News feeds updated successfully"
        else
          echo "ℹ️ No changes in news feeds"
        fi
